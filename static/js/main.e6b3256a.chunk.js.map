{"version":3,"sources":["components/filters.js","TableContainer.jsx","utils/Utils.js","components/RiffImage.jsx","utils/Client.ts","utils/ScalesData.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","column","style","marginTop","canFilter","render","DefaultColumnFilter","filterValue","setFilter","preFilteredRows","length","Input","value","onChange","e","target","undefined","placeholder","TableContainer","columns","data","renderRowSubComponent","useTable","defaultColumn","initialState","pageIndex","pageSize","useFilters","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","visibleColumns","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","generateSortingIndicator","isSorted","isSortedDesc","IconButton","Table","bordered","hover","TableHead","map","headerGroup","TableRow","getHeaderGroupProps","headers","TableCell","getHeaderProps","getSortByToggleProps","TableBody","row","cells","cell","getCellProps","isExpanded","colSpan","getRowProps","key","Box","display","maxWidth","marginBottom","textAlign","md","Button","color","onClick","disabled","marginLeft","type","min","width","max","defaultValue","event","Number","getRiffSVGName","name","octave","suffix","replace","RiffImage","this","props","pitch","mobile","alt","height","src","Component","client","axios","create","baseURL","withCredentials","fetchJson","path","options","showErrorDialog","result","axiosFetch","url","method","then","res","catch","err","setTimeout","requestScalesData","sorted","filtered","paginate_query","sort_query","forEach","item","push","id","desc","filter_query","sort","filter","get_paginated_scales","i","results","rows","pages","App","useState","setData","selectedPitch","selectedOctave","useEffect","a","fetch","response","json","body","contacts","console","log","doFetch","useMemo","Header","Cell","getToggleRowExpandedProps","accessor","d","image","Container","AppBar","background","Toolbar","fill","onFetchData","tableState","setState","scales","loading","original","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6b3256a.chunk.js","sourcesContent":["import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport const Filter = ({ column }) => {\n    return (\n        <div style={{ marginTop: 5 }}>\n            {column.canFilter && column.render('Filter')}\n        </div>\n    );\n};\n\nexport const DefaultColumnFilter = ({\n    column: {\n        filterValue,\n        setFilter,\n        preFilteredRows: { length },\n    },}) => {\n    return (\n        <Input\n            value={filterValue || ''}\n            onChange={(e) => {\n                setFilter(e.target.value || undefined);\n            }}\n            placeholder={``}\n        />\n    );\n};\n\nexport const SelectColumnFilter = ({\n    column: {filterValue, setFilter, preFilteredRows, id},\n}) => {\n    const options = React.useMemo(() => {\n        const options = new Set();\n        preFilteredRows.forEach((row) => {\n            options.add(row.values[id]);\n        });\n        return [...options.values()];\n    }, [id, preFilteredRows]);\n\n    return (\n        <Input\n            id='custom-select'\n            type='select'\n            value={filterValue}\n            onChange={(e) => {\n                setFilter(e.target.value || undefined);\n            }}\n        >\n            <option value=''>All</option>\n            {options.map((option) => (\n                <option key={option} value={option}>\n                    {option}\n                </option>\n            ))}\n        </Input>\n    );\n};\n\n\n\n\n\n","import React, { Fragment } from 'react';\nimport { useTable, useSortBy, useFilters, useExpanded, usePagination } from \"react-table\"\nimport { Filter, DefaultColumnFilter } from './components/filters';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\n\nconst TableContainer = ({ columns, data, renderRowSubComponent }) => {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        page,\n        prepareRow,\n        visibleColumns,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize }\n    } = useTable({\n        columns,\n        data,\n        defaultColumn: { Filter: DefaultColumnFilter},\n        initialState: { pageIndex: 0, pageSize: 10 }\n    },\n        useFilters,\n        useSortBy,\n        useExpanded,\n        usePagination\n    );\n\n    const generateSortingIndicator = (column) => {\n        return column.isSorted ? (column.isSortedDesc ? <IconButton><ExpandMoreIcon /></IconButton> : <IconButton><ExpandLessIcon /></IconButton> ) : '';\n    };\n\n    const onChangeInSelect = (event) => {\n        setPageSize(Number(event.target.value));\n    };\n\n    const onChangeInInput = (event) => {\n        const page = event.target.value ? Number(event.target.value) - 1 : 0;\n        gotoPage(page);\n    };\n\n    return (\n        <Fragment>\n        <Table bordered hover {...getTableProps()}>\n            <TableHead>\n            {headerGroups.map((headerGroup) => (\n                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column) => (\n                        <TableCell {...column.getHeaderProps()}>\n                            <div {...column.getSortByToggleProps()}>\n                                {column.render('Header')}\n                                {generateSortingIndicator(column)}\n                            </div>\n                            <Filter column={column} />\n                        </TableCell>\n                    ))}\n                </TableRow>\n            ))}\n            </TableHead>\n\n            <TableBody {...getTableBodyProps()}>\n            {page.map((row) => {\n                prepareRow(row);\n                return (\n                    <Fragment key={row.getRowProps().key}>\n                        <TableRow>\n                            {row.cells.map((cell) => {\n                                return (\n                                    <TableCell {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>\n                                );\n                            })}\n                        </TableRow>\n                        {row.isExpanded && (\n                            <TableRow>\n                                <TableCell colSpan={visibleColumns.length}>\n                                    {renderRowSubComponent(row)}\n                                </TableCell>\n                            </TableRow>\n                        )}\n                    </Fragment>\n                );\n            })}\n            </TableBody>\n        </Table>\n            <Box display=\"flex\" style={{ maxWidth: \"100%\", marginTop: \"3%\", marginBottom: \"1%\", textAlign: 'center' }}>\n                <Box md={3}>\n                    <Button\n                        color='primary'\n                        onClick={() => gotoPage(0)}\n                        disabled={!canPreviousPage}\n                    >\n                        {'<<'}\n                    </Button>\n                    <Button\n                        color='primary'\n                        onClick={previousPage}\n                        disabled={!canPreviousPage}\n                    >\n                        {'<'}\n                    </Button>\n                </Box>\n                <Box md={2} style={{ marginTop: 7, marginLeft: \"15%\" }}>\n                    Page{' '}\n                    <strong>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </strong>\n                </Box>\n                <Box style={{marginLeft: \"10%\"}} md={2}>\n                    <Input\n                        type='number'\n                        min={1}\n                        style={{ width: 70 }}\n                        max={pageOptions.length}\n                        defaultValue={pageIndex + 1}\n                        onChange={onChangeInInput}\n                    />\n                </Box>\n                <Box style={{marginLeft: \"10%\"}} md={2}>\n                    <Input\n                        type='number'\n                        value={pageSize}\n                        onChange={onChangeInSelect}\n                    >\n                        >\n                        {[10, 20, 30, 40, 50].map((pageSize) => (\n                            <option key={pageSize} value={pageSize}>\n                                Show {pageSize}\n                            </option>\n                        ))}\n                    </Input>\n                </Box>\n                <Box style={{marginLeft: \"15%\"}} md={3}>\n                    <Button color='primary' onClick={nextPage} disabled={!canNextPage}>\n                        {'>'}\n                    </Button>\n                    <Button\n                        color='primary'\n                        onClick={() => gotoPage(pageCount - 1)}\n                        disabled={!canNextPage}\n                    >\n                        {'>>'}\n                    </Button>\n                </Box>\n            </Box>\n        </Fragment>\n    );\n};\n\nexport default TableContainer;","export function getRiffSVGName(name, key, octave = 0) {\n    const suffix = !octave ? `` : `_${octave}`;\n    return name\n        .replace(\"_c.\", `_${key}${suffix}.`)\n        .replace(\"/120/\", \"/svg/\")\n        .replace(\".png\", \".svg\");\n}","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\n\nimport { getRiffSVGName } from \"../utils/Utils\";\n\nclass RiffImage extends Component {\n    render() {\n        const { name, pitch, octave, mobile } = this.props;\n        return mobile ? (\n            <img alt={`riff ${name} ${pitch}`} height={35} src={getRiffSVGName(name, pitch, octave)} />\n        ) : (\n            <img alt={`riff ${name} ${pitch}`} src={getRiffSVGName(name, pitch, octave)} />\n        );\n    }\n}\n\nexport default RiffImage;\n\nRiffImage.propTypes = {\n    onRiffImageClick: PropTypes.func,\n    size: PropTypes.number,\n    mobile: PropTypes.bool, // not mobile when not provided?\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    pitch: PropTypes.string.isRequired,\n    octave: PropTypes.string.isRequired\n};","import axios from \"axios\";\nimport { Riff } from \"./types\";\n\nconst API_URI = process.env.NODE_ENV === \"development\" ? \"http://localhost:5000/\" : \"https://api.improviser.education/\";\n\nconst client = axios.create({\n    baseURL: API_URI,\n    withCredentials: true\n});\n\nexport function get_paginated_scales(range = [0, 10], sort = [\"start_date\", \"desc\"], filter: string) : Promise<Riff[]> {\n    return fetchJson(`/v1/exercises/scales/?range=${range}&sort=${sort}&filter=${filter}`);\n}\n\nfunction fetchJson<R = {}>(\n    path: string,\n    options = {},\n    headers = {},\n    showErrorDialog = true,\n    result = true\n): Promise<R> {\n    return axiosFetch(path, options, headers, showErrorDialog, result);\n}\n\nfunction axiosFetch<R = {}>(\n    path: string,\n    options = {},\n    headers = {},\n    showErrorDialog = true,\n    result = true\n): Promise<R> {\n    // preset the config with the relative URL and a GET type.\n    // presets can be overridden with `options`.\n    return client({ url: path, method: \"GET\", ...options })\n        .then(res => res.data)\n        .catch(err => {\n            if (showErrorDialog) {\n                setTimeout(() => {\n                    throw err;\n                }, 250);\n            }\n            throw err;\n        });\n}","import { get_paginated_scales } from \"./Client\";\n\nexport const requestScalesData = (pageSize, page, sorted, filtered) => {\n    const paginate_query = `[${page * (pageSize - 1)},${pageSize - 1 + page * (pageSize - 1)}]`;\n    let sort_query = [];\n    sorted.forEach(item => {\n        sort_query.push(item.id);\n        sort_query.push(item.desc ? \"DESC\" : \"ASC\");\n    });\n\n    let filter_query = [];\n    filtered.forEach(item => {\n        filter_query.push(`'${item.id}':'${item.value}'`);\n    });\n\n    return get_paginated_scales(paginate_query, `%5B${sort_query.map(i => `\"${i}\"`)}%5D`, `%7B${filter_query}%7D`).then(\n        results => {\n            const res = {\n                rows: results,\n                pages: 20 // todo: get it from header\n            };\n            return res;\n        }\n    );\n};","import React, { useEffect, useState, useMemo } from 'react';\nimport TableContainer from './TableContainer';\n\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nimport RiffImage from \"./components/RiffImage\";\nimport { requestScalesData } from \"./utils/ScalesData\";\n\nconst App = () => {\n    const [data, setData] = useState([]);\n    const [selectedPitch, setSelectedPitch] = useState(\"c\");\n    const [selectedOctave, setSelectedOctave] = useState(0);\n\n    useEffect(() => {\n        const doFetch = async () => {\n            const response = await fetch('https://api.improviser.education/v1/exercises/scales');\n            const body = await response.json();\n            const contacts = body;\n            console.log(contacts);\n            setData(contacts);\n        };\n        doFetch();\n    }, []);\n\n    const fetchData = (tableState) => {\n        let filtered = [...tableState.filtered];\n        debugger\n        requestScalesData(tableState.pageSize, tableState.page, tableState.sorted, filtered).then(res => {\n            this.setState({\n                scales: res.rows,\n                pages: res.pages,\n                loading: false\n            });\n        });\n    }\n\n    const renderRowSubComponent = (row) => {\n        const {\n            name,\n            image\n        } = row.original\n        return (\n            <Container style={{ width: '18rem', margin: '0 auto' }}>\n                <Container>\n                    <Container>\n                        <strong>{name}</strong>\n                        <RiffImage id={image} name={image} pitch={selectedPitch} octave={selectedOctave} />\n                    </Container>\n                </Container>\n            </Container>\n        );\n    };\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: () => null,\n                id: 'expander', // 'id' is required\n                Cell: ({ row }) => (\n                    <span {...row.getToggleRowExpandedProps()}>\n            {row.isExpanded ? <IconButton><VisibilityOffIcon /></IconButton> : <IconButton><VisibilityIcon /></IconButton>}\n          </span>\n                ),\n            },\n            {\n                Header: 'Name',\n                accessor: 'name',\n            },\n            {\n                Header: 'Bars',\n                accessor: 'number_of_bars',\n            },\n            {\n                Header: 'Chord',\n                accessor: 'chord',\n            },\n            {\n                Header: 'Created',\n                accessor: 'created_at',\n            },\n            {\n                Header: 'Image',\n                accessor: d => <RiffImage id={d.id} name={d.image} pitch={selectedPitch} octave={selectedOctave} />\n            },\n        ],\n        []\n    );\n\n    return (\n        <Container>\n            <div>\n                <h1 style={{marginTop: \"8%\", marginLeft: \"5%\"}}>Scaletrainer</h1>\n                <AppBar style={{ background: '#2285d0' }}>\n                    <Toolbar>\n                        <MusicNoteIcon style={{fill: \"white\", marginLeft: \"2%\"}} />\n                        <Button style={{marginLeft: \"4%\"}} color=\"inherit\">Scales</Button>\n                        <Button style={{marginLeft: \"2%\"}} color=\"inherit\">Riffs</Button>\n                        <Button style={{marginLeft: \"2%\"}} color=\"inherit\">Ideabook</Button>\n                        <Button style={{marginLeft: \"2%\"}} color=\"inherit\">Exercises</Button>\n                        <AccountCircleIcon style={{fill: \"white\", marginLeft: \"59%\"}} />\n                    </Toolbar>\n                </AppBar>\n            </div>\n        <Container style={{ marginTop: 40 }}>\n            <TableContainer\n                columns={columns}\n                data={data}\n                onFetchData={fetchData}\n                renderRowSubComponent={renderRowSubComponent}\n            />\n\n        </Container>\n        </Container>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}